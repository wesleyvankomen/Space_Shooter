{\rtf1\ansi\ansicpg1252\cocoartf1344\cocoasubrtf720
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red68\green68\blue68;\red0\green150\blue149;\red51\green100\blue164;
\red245\green125\blue0;\red165\green62\blue0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs24 \cf2 	\cf3 public\cf2  \cf4 int\cf2  hazardCount;\
	\cf3 public\cf2  \cf4 float\cf2  spawnWait;\
	\cf3 public\cf2  \cf4 float\cf2  startWait;\
	\cf3 public\cf2  \cf4 float\cf2  waveWait;\
	\
	\cf3 public\cf2  \cf4 GUIText\cf2  scoreText;\
	\cf3 public\cf2  \cf4 GUIText\cf2  restartText;\
	\cf3 public\cf2  \cf4 GUIText\cf2  gameOverText;\
	\
	\cf3 private\cf2  \cf4 bool\cf2  gameOver;\
	\cf3 private\cf2  \cf4 bool\cf2  restart;\
	\cf3 private\cf2  \cf4 int\cf2  score;\
\
	\
	\cf4 void\cf2  Start ()\
	\{\
		UpdateScore ();\
		gameOver = \cf4 false\cf2 ;\
		restart = \cf4 false\cf2 ;\
		restartText.text = \cf5 ""\cf2 ;\
		gameOverText.text = \cf5 ""\cf2 ;\
		score = \cf5 0\cf2 ;\
		StartCoroutine (SpawnWaves ());\
	\}\
	\
	\cf4 void\cf2  Update ()\
	\{\
		\cf3 if\cf2  (restart)\
		\{\
			\cf3 if\cf2  (\cf4 Input\cf2 .GetKeyDown (\cf4 KeyCode\cf2 .R))\
			\{\
				\cf4 Application\cf2 .LoadLevel (\cf4 Application\cf2 .loadedLevel);\
			\}\
		\}\
	\}\
	\
	IEnumerator SpawnWaves ()\
	\{\
		\cf3 yield\cf2  \cf3 return\cf2  \cf3 new\cf2  \cf4 WaitForSeconds\cf2  (startWait);\
		\cf3 while\cf2  (\cf4 true\cf2 )\
		\{\
			\cf3 for\cf2  (\cf4 int\cf2  i = \cf5 0\cf2 ; i < hazardCount; i++)\
			\{\
				\cf4 GameObject\cf2  hazard = hazards [\cf4 Random\cf2 .Range (\cf5 0\cf2 , hazards.Length)];\
				\cf4 Vector3\cf2  spawnPosition = \cf3 new\cf2  \cf4 Vector3\cf2  (\cf4 Random\cf2 .Range (-spawnValues.x, spawnValues.x), spawnValues.y, spawnValues.z);\
				\cf4 Quaternion\cf2  spawnRotation = \cf4 Quaternion\cf2 .identity;\
				Instantiate (hazard, spawnPosition, spawnRotation);\
				\cf3 yield\cf2  \cf3 return\cf2  \cf3 new\cf2  \cf4 WaitForSeconds\cf2  (spawnWait);\
			\}\
			\cf3 yield\cf2  \cf3 return\cf2  \cf3 new\cf2  \cf4 WaitForSeconds\cf2  (waveWait);\
			\
			\cf3 if\cf2  (gameOver)\
			\{\
				restartText.text = \cf5 "Press 'R' for Restart"\cf2 ;\
				restart = \cf4 true\cf2 ;\
				\cf3 break\cf2 ;\
			\}\
		\}\
	\}\
	\
	\cf3 public\cf2  \cf4 void\cf2  AddScore (\cf4 int\cf2  newScoreValue)\
	\{\
		score += newScoreValue;\
		UpdateScore ();\
	\}\
	\
	\cf4 void\cf2  UpdateScore ()\
	\{\
		scoreText.text = \cf5 "Score: "\cf2  + score;\
		gameOverText.text = \cf5 "Game Over! \cf6 \\ n\cf5 "\cf2  +\
			\cf5 "Score: "\cf2  + score;\
	\}\
	\
	\cf3 public\cf2  \cf4 void\cf2  GameOver ()\
	\{\
		gameOver = \cf4 true\cf2 ;\
	\}\
\}\
}